{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/timothyyau/Desktop/booklist2/Advanced-React/booklist/frontend/components/CreateBookForm.js\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport useForm from '../lib/useForm';\nimport { ALL_BOOKS_QUERY } from './Booklist';\nconst CREATE_BOOK_MUTATION = gql`\n  mutation CREATE_BOOK_MUTATION(\n    $title: String!\n    $year: Int!\n    $authorName: String!\n    $dateOfBirth: String!\n  ) {\n    createBook(\n      data: {\n        title: $title\n        year: $year\n        author: { create: { name: $authorName, dateOfBirth: $dateOfBirth } }\n      }\n    ) {\n      id\n    }\n  }\n`;\nexport default function BookForm() {\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm({\n    title: '',\n    year: '',\n    authorName: '',\n    dateOfBirth: ''\n  });\n  const [createBook, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_BOOK_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_BOOKS_QUERY\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: async e => {\n      e.preventDefault();\n      console.log(inputs); // Submit input fields to the backend\n\n      const res = await createBook();\n      clearForm();\n      Router.push({\n        pathName: `/product/${res.data.createBook.id}`\n      });\n    },\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: loading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: [\"Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          placeholder: \"Title\",\n          value: inputs.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        children: [\"Year\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"number\",\n          id: \"year\",\n          name: \"year\",\n          placeholder: \"year\",\n          value: inputs.year,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"authorName\",\n        children: [\"Author Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          id: \"authorName\",\n          name: \"authorName\",\n          placeholder: \"Author Name\",\n          value: inputs.authorName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dateOfBirth\",\n        children: [\"Author Date of Birth\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"dateOfBirth\",\n          name: \"dateOfBirth\",\n          placeholder: \"Author Date of Birth\",\n          value: inputs.dateOfBirth,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/timothyyau/Desktop/booklist2/Advanced-React/booklist/frontend/components/CreateBookForm.js"],"names":["useMutation","gql","Router","useForm","ALL_BOOKS_QUERY","CREATE_BOOK_MUTATION","BookForm","inputs","handleChange","clearForm","resetForm","title","year","authorName","dateOfBirth","createBook","loading","error","data","variables","refetchQueries","query","e","preventDefault","console","log","res","push","pathName","id"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport useForm from '../lib/useForm';\nimport { ALL_BOOKS_QUERY } from './Booklist';\n\nconst CREATE_BOOK_MUTATION = gql`\n  mutation CREATE_BOOK_MUTATION(\n    $title: String!\n    $year: Int!\n    $authorName: String!\n    $dateOfBirth: String!\n  ) {\n    createBook(\n      data: {\n        title: $title\n        year: $year\n        author: { create: { name: $authorName, dateOfBirth: $dateOfBirth } }\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nexport default function BookForm() {\n  const { inputs, handleChange, clearForm, resetForm } = useForm({\n    title: '',\n    year: '',\n    authorName: '',\n    dateOfBirth: '',\n  });\n\n  const [createBook, { loading, error, data }] = useMutation(\n    CREATE_BOOK_MUTATION,\n    {\n      variables: inputs,\n      refetchQueries: [{ query: ALL_BOOKS_QUERY }],\n    }\n  );\n  return (\n    <form\n      onSubmit={async (e) => {\n        e.preventDefault();\n        console.log(inputs);\n        // Submit input fields to the backend\n        const res = await createBook();\n        clearForm();\n        Router.push({\n          pathName: `/product/${res.data.createBook.id}`,\n        });\n      }}\n    >\n      <fieldset disabled={loading}>\n        <label htmlFor=\"title\">\n          Title\n          <input\n            required\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Title\"\n            value={inputs.title}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"year\">\n          Year\n          <input\n            required\n            type=\"number\"\n            id=\"year\"\n            name=\"year\"\n            placeholder=\"year\"\n            value={inputs.year}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"authorName\">\n          Author Name\n          <input\n            required\n            type=\"text\"\n            id=\"authorName\"\n            name=\"authorName\"\n            placeholder=\"Author Name\"\n            value={inputs.authorName}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"dateOfBirth\">\n          Author Date of Birth\n          <input\n            type=\"date\"\n            id=\"dateOfBirth\"\n            name=\"dateOfBirth\"\n            placeholder=\"Author Date of Birth\"\n            value={inputs.dateOfBirth}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add Book</button>\n      </fieldset>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}