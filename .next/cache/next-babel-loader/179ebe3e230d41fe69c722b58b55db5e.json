{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/timothyyau/Desktop/booklist2/Advanced-React/booklist/frontend/components/SingleBook.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    Book(where: { id: $id }) {\n      title\n      year\n      id\n      author {\n        id\n        name\n        dateOfBirth\n      }\n    }\n  }\n`;\nexport default function SingleBook({\n  id\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: data.Book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Book Title: \", data.Book.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Year: \", data.Book.year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author Name: \", data.Book.author.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author Date of Birth: \", data.Book.author.dateOfBirth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/timothyyau/Desktop/booklist2/Advanced-React/booklist/frontend/components/SingleBook.js"],"names":["useQuery","gql","Head","SINGLE_ITEM_QUERY","SingleBook","id","data","loading","error","variables","console","log","Book","title","year","author","name","dateOfBirth"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,MAAMC,iBAAiB,GAAGF,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,eAAe,SAASG,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA4B;AACzC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACG,iBAAD,EAAoB;AAC3DM,IAAAA,SAAS,EAAE;AACTJ,MAAAA;AADS;AADgD,GAApB,CAAzC;AAMA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACbG,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAQA,IAAI,CAACM,IAAL,CAAUC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,iCAAiBP,IAAI,CAACM,IAAL,CAAUC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,2BAAUP,IAAI,CAACM,IAAL,CAAUE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AAAA,kCAAiBR,IAAI,CAACM,IAAL,CAAUG,MAAV,CAAiBC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,2CAA0BV,IAAI,CAACM,IAAL,CAAUG,MAAV,CAAiBE,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    Book(where: { id: $id }) {\n      title\n      year\n      id\n      author {\n        id\n        name\n        dateOfBirth\n      }\n    }\n  }\n`;\n\nexport default function SingleBook({ id }) {\n  const { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id,\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  console.log(data);\n\n  return (\n    <div>\n      <Head>\n        <title>{data.Book.title}</title>\n      </Head>\n      <h2>Book Title: {data.Book.title}</h2>\n      <p>Year: {data.Book.year}</p>\n\n      <p>Author Name: {data.Book.author.name}</p>\n      <p>Author Date of Birth: {data.Book.author.dateOfBirth}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}