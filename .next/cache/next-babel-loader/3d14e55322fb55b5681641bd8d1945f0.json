{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/timothyyau/Desktop/booklist2/Advanced-React/booklist/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timothyyau/Desktop/booklist2/Advanced-React/booklist/frontend/components/SingleBook.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ITEM_QUERY($id: ID!) {\\n    Book(where: { id: $id }) {\\n      title\\n      year\\n      id\\n      author {\\n        id\\n        name\\n        dateOfBirth\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\nexport default function SingleBook(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: data.Book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Book Title: \", data.Book.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Year: \", data.Book.year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author Name: \", data.Book.author.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author Date of Birth: \", data.Book.author.dateOfBirth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleBook, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleBook\");","map":{"version":3,"sources":["/Users/timothyyau/Desktop/booklist2/Advanced-React/booklist/frontend/components/SingleBook.js"],"names":["useQuery","gql","Head","SINGLE_ITEM_QUERY","SingleBook","id","variables","data","loading","error","console","log","Book","title","year","author","name","dateOfBirth"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,IAAMC,iBAAiB,GAAGF,GAAH,mBAAvB;AAeA,eAAe,SAASG,UAAT,OAA4B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBACRL,QAAQ,CAACG,iBAAD,EAAoB;AAC3DG,IAAAA,SAAS,EAAE;AACTD,MAAAA,EAAE,EAAFA;AADS;AADgD,GAApB,CADA;AAAA,MACjCE,IADiC,aACjCA,IADiC;AAAA,MAC3BC,OAD2B,aAC3BA,OAD2B;AAAA,MAClBC,KADkB,aAClBA,KADkB;;AAOzC,MAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACbE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAQA,IAAI,CAACK,IAAL,CAAUC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,iCAAiBN,IAAI,CAACK,IAAL,CAAUC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,2BAAUN,IAAI,CAACK,IAAL,CAAUE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AAAA,kCAAiBP,IAAI,CAACK,IAAL,CAAUG,MAAV,CAAiBC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,2CAA0BT,IAAI,CAACK,IAAL,CAAUG,MAAV,CAAiBE,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAtBuBb,U;UACWJ,Q;;;KADXI,U","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    Book(where: { id: $id }) {\n      title\n      year\n      id\n      author {\n        id\n        name\n        dateOfBirth\n      }\n    }\n  }\n`;\n\nexport default function SingleBook({ id }) {\n  const { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id,\n    },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  console.log(data);\n\n  return (\n    <div>\n      <Head>\n        <title>{data.Book.title}</title>\n      </Head>\n      <h2>Book Title: {data.Book.title}</h2>\n      <p>Year: {data.Book.year}</p>\n\n      <p>Author Name: {data.Book.author.name}</p>\n      <p>Author Date of Birth: {data.Book.author.dateOfBirth}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}