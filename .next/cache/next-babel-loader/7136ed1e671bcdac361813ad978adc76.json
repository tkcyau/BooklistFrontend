{"ast":null,"code":"import _regeneratorRuntime from \"/Users/timothyyau/Desktop/booklist2/Advanced-React/booklist/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/timothyyau/Desktop/booklist2/Advanced-React/booklist/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/timothyyau/Desktop/booklist2/Advanced-React/booklist/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/timothyyau/Desktop/booklist2/Advanced-React/booklist/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/timothyyau/Desktop/booklist2/Advanced-React/booklist/frontend/components/CreateBookForm.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_BOOK_MUTATION(\\n    $title: String!\\n    $year: Int!\\n    $authorName: String!\\n    $dateOfBirth: String!\\n  ) {\\n    createBook(\\n      data: {\\n        title: $title\\n        year: $year\\n        author: { create: { name: $authorName, dateOfBirth: $dateOfBirth } }\\n      }\\n    ) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport useForm from '../lib/useForm';\nimport { ALL_BOOKS_QUERY } from './Booklist';\nvar CREATE_BOOK_MUTATION = gql(_templateObject());\nexport default function BookForm() {\n  _s();\n\n  var _useForm = useForm({\n    title: '',\n    year: '',\n    authorName: '',\n    dateOfBirth: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(CREATE_BOOK_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_BOOKS_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createBook = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error,\n      data = _useMutation2$.data;\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                console.log(inputs); // Submit input fields to the backend\n\n                _context.next = 4;\n                return createBook();\n\n              case 4:\n                res = _context.sent;\n                clearForm();\n                Router.push({\n                  pathName: \"/product/\".concat(res.data.createBook.id)\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: loading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: [\"Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          placeholder: \"Title\",\n          value: inputs.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        children: [\"Year\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"number\",\n          id: \"year\",\n          name: \"year\",\n          placeholder: \"year\",\n          value: inputs.year,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"authorName\",\n        children: [\"Author Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          id: \"authorName\",\n          name: \"authorName\",\n          placeholder: \"Author Name\",\n          value: inputs.authorName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dateOfBirth\",\n        children: [\"Author Date of Birth\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"dateOfBirth\",\n          name: \"dateOfBirth\",\n          placeholder: \"Author Date of Birth\",\n          value: inputs.dateOfBirth,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BookForm, \"BYWMoFAzXiv6T9apViqnFvtnnZw=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = BookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"sources":["/Users/timothyyau/Desktop/booklist2/Advanced-React/booklist/frontend/components/CreateBookForm.js"],"names":["useMutation","gql","Router","useForm","ALL_BOOKS_QUERY","CREATE_BOOK_MUTATION","BookForm","title","year","authorName","dateOfBirth","inputs","handleChange","clearForm","resetForm","variables","refetchQueries","query","createBook","loading","error","data","e","preventDefault","console","log","res","push","pathName","id"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport useForm from '../lib/useForm';\nimport { ALL_BOOKS_QUERY } from './Booklist';\n\nconst CREATE_BOOK_MUTATION = gql`\n  mutation CREATE_BOOK_MUTATION(\n    $title: String!\n    $year: Int!\n    $authorName: String!\n    $dateOfBirth: String!\n  ) {\n    createBook(\n      data: {\n        title: $title\n        year: $year\n        author: { create: { name: $authorName, dateOfBirth: $dateOfBirth } }\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nexport default function BookForm() {\n  const { inputs, handleChange, clearForm, resetForm } = useForm({\n    title: '',\n    year: '',\n    authorName: '',\n    dateOfBirth: '',\n  });\n\n  const [createBook, { loading, error, data }] = useMutation(\n    CREATE_BOOK_MUTATION,\n    {\n      variables: inputs,\n      refetchQueries: [{ query: ALL_BOOKS_QUERY }],\n    }\n  );\n  return (\n    <form\n      onSubmit={async (e) => {\n        e.preventDefault();\n        console.log(inputs);\n        // Submit input fields to the backend\n        const res = await createBook();\n        clearForm();\n        Router.push({\n          pathName: `/product/${res.data.createBook.id}`,\n        });\n      }}\n    >\n      <fieldset disabled={loading}>\n        <label htmlFor=\"title\">\n          Title\n          <input\n            required\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Title\"\n            value={inputs.title}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"year\">\n          Year\n          <input\n            required\n            type=\"number\"\n            id=\"year\"\n            name=\"year\"\n            placeholder=\"year\"\n            value={inputs.year}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"authorName\">\n          Author Name\n          <input\n            required\n            type=\"text\"\n            id=\"authorName\"\n            name=\"authorName\"\n            placeholder=\"Author Name\"\n            value={inputs.authorName}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"dateOfBirth\">\n          Author Date of Birth\n          <input\n            type=\"date\"\n            id=\"dateOfBirth\"\n            name=\"dateOfBirth\"\n            placeholder=\"Author Date of Birth\"\n            value={inputs.dateOfBirth}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add Book</button>\n      </fieldset>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}